
plugins {
    id "java"
    id "maven"
    id "maven-publish"
    id "jacoco"
    id "pmd"
    id "com.github.nwillc.vplugin" version "1.3.4"
    id "com.jfrog.bintray" version "1.7.3"
}

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    compile  'org.tinylog:tinylog:1.2-beta-1'
    runtime 'org.tinylog:slf4j-binding:1.2-beta-1'
    testCompile 'junit:junit:4.12',
            'com.github.nwillc:jdk_contract_tests:1.8.1',
            'org.mockito:mockito-core:2.2.9',
            'org.assertj:assertj-core:3.6.0'
}

configurations {
    compile.exclude group: 'org.slf4j', module: 'slf4j-simple'
}

group = "com.github.nwillc"
version = "0.1.2-SNAPSHOT"
targetCompatibility = "1.8"
sourceCompatibility = "1.8"

test {

    beforeTest { descriptor ->
        logger.lifecycle("\tRunning " + descriptor.className + "." + descriptor.name)
    }

    afterSuite { descriptor, result ->
        if (descriptor.parent == null) {
            logger.lifecycle("\tTests run: " + result.testCount
                    + ", Failures: " + result.failedTestCount
                    + ", Skipped: " + result.skippedTestCount)
        }
    }

    testLogging {
        exceptionFormat "full"
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
        }
    }
}

bintrayUpload.onlyIf { !project.version.toString().endsWith('SNAPSHOT') }

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')

    dryRun = false
    publish = true
    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        name = project.name
        desc = 'Simple/trivial light weight object persistence approach.'
        websiteUrl = 'https://github.com/nwillc/opa'
        issueTrackerUrl = 'https://github.com/nwillc/opa/issues'
        vcsUrl = 'https://github.com/nwillc/opa.git'
        licenses = ['ISC']
        labels = ['jdk8', 'persistence']
        publicDownloadNumbers = true
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

pmd {
    toolVersion = '4.3'
    sourceSets = [sourceSets.main]
    ignoreFailures = true
    ruleSets = [
            "basic",
            "braces",
            "naming",
            "clone",
            "codesize",
            "controversial",
            "design",
            "finalizers",
            "imports",
            "junit",
            "logging-java",
            "migrating",
            "optimizations",
            "strictexception",
            "strings",
            "sunsecure",
            "typeresolution",
            "unusedcode"
    ]
}
